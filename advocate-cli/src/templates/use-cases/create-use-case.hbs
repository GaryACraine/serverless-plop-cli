import { {{pascalCase name}}Dto } from '@dto/{{kebabCase name}}';
import { {{pascalCase useCaseSchemaName}}Dto } from '@dto/{{kebabCase useCaseSchemaName}}';
import { getISOString, logger, schemaValidator } from '@shared';
import { schema } from '@schemas/{{kebabCase useCaseSchemaName}}';
import { v4 as uuid } from 'uuid';

export async function {{camelCase name}}UseCase(
  {{camelCase useCaseSchemaName}}: {{pascalCase name}}Dto
): Promise<{{pascalCase useCaseSchemaName}}Dto> {
  const createdDate = getISOString();

  const {{camelCase useCaseSchemaName}}Dto: {{pascalCase name}}Dto = {
     id: uuid(),
     created: createdDate,
      ...{{camelCase useCaseSchemaName}},
  }

  schemaValidator(schema, {{camelCase useCaseSchemaName}});

  // TODO - use a secondary adapter to persist the item in a store

  logger.info(
    `{{camelCase useCaseSchemaName}} created`
  );

  return {{camelCase useCaseSchemaName}}Dto;
}
